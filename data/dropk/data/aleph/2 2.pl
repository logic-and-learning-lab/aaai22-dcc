:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([25, 94, 70, 21, 91, 75, 3, 56, 7, 16, 56, 51, 19, 48, 31, 50, 54, 9, 36, 95, 60, 53, 21, 92, 5, 3, 34, 10, 100, 58, 27, 22, 67, 19, 43, 24, 5, 13, 43, 42, 24, 93, 36, 88, 47],36,[5, 13, 43, 42, 24, 93, 36, 88, 47]).
f([87, 97, 88, 3, 98, 48, 45, 88, 12, 64, 3, 57, 93, 62, 61, 38, 54, 55, 10, 60, 56, 101, 50, 6, 16, 53, 18, 34, 84, 1, 14, 99, 50, 38, 77, 46, 51, 43, 8, 96],37,[43, 8, 96]).
f([54, 69, 20, 67, 72, 47, 92, 31, 77, 14, 2, 77, 65, 31, 71, 85, 98, 39, 63, 21, 40, 32, 8, 10, 56, 84, 99, 99, 40, 36, 32, 33, 62, 56, 12, 29, 61, 59, 60, 69, 52, 64, 87, 12, 82, 95],41,[64, 87, 12, 82, 95]).
f([86, 47, 32, 27],4,[]).
f([29, 36, 25, 41, 54],4,[54]).
f([77, 61, 23, 64, 58, 34, 40, 24, 17, 98, 42, 44, 14, 52, 22, 44, 34, 25, 62, 40, 81, 75, 97, 45, 84, 23, 35, 87, 67],29,[]).
f([28, 97, 10, 13, 62, 44, 76, 48, 96, 3, 17, 9, 92, 81, 41, 96, 101, 47, 15, 5, 30, 83, 62, 87, 72, 99, 1, 28, 53, 8, 89, 75, 15, 49, 80, 26, 27],15,[96, 101, 47, 15, 5, 30, 83, 62, 87, 72, 99, 1, 28, 53, 8, 89, 75, 15, 49, 80, 26, 27]).
f([29, 2, 43, 58, 89, 86, 37, 67, 93, 5, 74, 57, 7, 53, 9, 28, 42, 23, 39],14,[9, 28, 42, 23, 39]).
f([27, 42, 19, 64, 61, 93, 16, 49, 14, 88, 12, 6, 31, 52, 1, 77, 27, 98, 96, 27, 4, 11, 42, 7, 96, 97, 88, 9, 48, 32, 101, 37, 83, 21, 23, 48, 70, 76, 25, 15, 40, 37, 89, 67, 30, 46, 21],46,[21]).
f([46, 71, 79, 97, 95, 60, 65, 52, 72, 80, 83, 6, 23, 88, 6, 101, 84, 49, 6],1,[71, 79, 97, 95, 60, 65, 52, 72, 80, 83, 6, 23, 88, 6, 101, 84, 49, 6]).
:-end_in_pos.
:-begin_in_neg.
f([71, 32, 38, 68, 10, 44, 90, 12, 93, 21, 35, 86, 56, 48, 100, 3, 58, 6, 82, 70, 57, 26, 40, 75, 95],0,[32, 38, 68, 10, 44, 90, 12, 93, 21, 35, 86, 56, 48, 100, 3, 58, 6, 82, 70, 57, 26, 40, 75, 95]).
f([48, 30, 97, 80, 66, 50, 51, 16, 53, 23, 91, 10, 7, 70, 40, 100, 3, 22, 71],7,[22, 71]).
f([17, 64, 36, 68, 35, 21, 73, 74, 93, 98, 85, 47],3,[73, 74, 93, 98, 85, 47]).
f([48, 6, 89, 26, 29, 19, 51, 65, 28, 12, 49, 86, 14, 8, 73, 5, 81, 21, 66, 38, 68, 79, 47, 48, 41, 81, 87, 38, 32, 79, 100, 31, 7, 19, 19, 93, 56, 48, 7],32,[56, 48, 7]).
f([6, 93, 6, 72, 1, 2, 97, 91, 38, 43, 34, 71, 31, 36, 19, 96, 83, 62, 57, 98, 54, 80, 71],16,[31, 36, 19, 96, 83, 62, 57, 98, 54, 80, 71]).
f([25, 46, 50, 84, 45, 26, 88, 43, 100, 10, 54, 28, 48, 26, 80, 5, 57, 12, 67, 38, 62, 49, 13, 19, 14, 88, 4, 75, 55, 42, 12, 59, 37, 14, 36, 72, 51, 23, 41, 23, 76, 65, 98, 32, 6, 93],37,[41, 23, 76, 65, 98, 32, 6, 93]).
f([71, 7, 83, 55, 100, 25, 60, 54, 62, 65, 65, 18, 100, 2, 39, 65, 33, 91, 51, 2, 74, 44, 17, 36, 101, 38, 9, 5, 18, 95, 71, 66, 51, 82, 79, 30, 98, 91, 77, 86],21,[36, 101, 38, 9, 5, 18, 95, 71, 66, 51, 82, 79, 30, 98, 91, 77, 86]).
f([41, 66, 54, 8, 11, 49],4,[8, 11, 49]).
f([12, 58, 99, 71, 26, 50, 86, 26, 58, 92, 15, 67, 56, 52, 9, 57, 85, 83, 20, 53, 55],5,[20, 53, 55]).
f([97, 12, 24, 71, 45, 76, 35, 59, 67, 94, 3, 12, 37, 61, 76, 70, 4, 55, 25, 22, 67, 51, 87, 12, 46, 43, 29, 70, 23, 31, 87, 7, 70, 28, 47, 89, 49, 53, 11, 61, 58, 25],25,[94, 3, 12, 37, 61, 76, 70, 4, 55, 25, 22, 67, 51, 87, 12, 46, 43, 29, 70, 23, 31, 87, 7, 70, 28, 47, 89, 49, 53, 11, 61, 58, 25]).
:-end_in_neg.
