:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([30, 78, 12, 52, 98, 90, 72, 68, 43, 43, 22, 22, 53, 5, 92, 1, 4, 17, 32, 90, 22, 92, 2, 33, 98, 65, 58, 93, 101, 69, 97, 64, 24, 25, 84, 15, 22, 92, 56, 84, 61, 92, 22],12,[53, 5, 92, 1, 4, 17, 32, 90, 22, 92, 2, 33, 98, 65, 58, 93, 101, 69, 97, 64, 24, 25, 84, 15, 22, 92, 56, 84, 61, 92, 22]).
f([37, 87, 90, 27, 90, 56, 77, 79, 60, 88, 43, 31, 83, 37, 37, 34, 43, 39, 60, 26, 50, 93, 12, 66, 47, 24, 4, 87, 21, 98, 91, 35, 51, 62, 10, 46, 62, 93, 85, 100, 94, 57, 10, 3, 7, 55, 8, 98, 91, 60, 65],18,[60, 26, 50, 93, 12, 66, 47, 24, 4, 87, 21, 98, 91, 35, 51, 62, 10, 46, 62, 93, 85, 100, 94, 57, 10, 3, 7, 55, 8, 98, 91, 60, 65]).
f([90, 22, 42, 23, 81, 88, 27, 61, 17, 36, 46, 85, 22, 35, 46, 15, 48, 56, 2, 81, 29, 83],14,[46, 15, 48, 56, 2, 81, 29, 83]).
f([98, 11, 69, 25, 51, 81, 61, 78, 80, 97, 21, 29, 83, 84, 14, 8, 11, 5, 19, 72, 11, 64, 44, 60, 33, 72, 64, 3, 85, 35, 15, 7, 12, 36, 40, 38, 16, 101, 27, 56, 46, 66, 28, 64, 4, 66, 22],2,[69, 25, 51, 81, 61, 78, 80, 97, 21, 29, 83, 84, 14, 8, 11, 5, 19, 72, 11, 64, 44, 60, 33, 72, 64, 3, 85, 35, 15, 7, 12, 36, 40, 38, 16, 101, 27, 56, 46, 66, 28, 64, 4, 66, 22]).
f([12, 25, 89, 100, 92, 85, 31, 57, 13, 47, 12, 60, 92, 84, 77, 62, 2, 41, 44, 50, 31, 14, 49, 43, 39, 42, 57, 44, 31, 17, 62, 47, 12, 31, 14, 87, 48, 80, 44, 53, 69, 35, 36],13,[84, 77, 62, 2, 41, 44, 50, 31, 14, 49, 43, 39, 42, 57, 44, 31, 17, 62, 47, 12, 31, 14, 87, 48, 80, 44, 53, 69, 35, 36]).
f([54, 81, 32, 74, 57, 20, 55, 43, 21, 82],7,[43, 21, 82]).
f([53, 96, 80, 92, 71, 92, 21, 94, 33, 19, 93, 26, 85, 79, 12, 53, 91, 93],12,[85, 79, 12, 53, 91, 93]).
f([39, 78, 97, 9, 55, 62, 61, 97, 27, 92, 74, 58, 69, 91, 83, 95, 93, 92, 29, 70, 50, 100, 60, 24, 59, 90, 82, 84, 83, 17, 43, 4],31,[4]).
f([80, 16, 63, 33, 72, 9, 33, 92, 3, 47, 95, 74, 62, 30, 96, 15, 79, 65, 86, 51],8,[3, 47, 95, 74, 62, 30, 96, 15, 79, 65, 86, 51]).
f([65, 45, 59, 36, 46, 81, 65],5,[81, 65]).
:-end_in_pos.
:-begin_in_neg.
f([45, 41, 29, 67, 26, 24, 41, 23, 88, 86, 78, 33, 97, 72, 63, 7, 6, 92, 26, 101, 96, 29, 100, 95, 51, 4, 21, 86, 47, 91, 93, 42, 61, 87, 99, 3, 75, 47, 88, 75, 73, 88, 58, 42],33,[92, 26, 101, 96, 29, 100, 95, 51, 4, 21, 86, 47, 91, 93, 42, 61, 87, 99, 3, 75, 47, 88, 75, 73, 88, 58, 42]).
f([80, 56, 55, 84, 15, 16, 68, 91, 33, 50, 73, 58, 100],13,[73, 58, 100]).
f([83, 13, 66, 21, 6, 65, 66, 15, 87, 65, 29, 68, 36, 56, 49, 84, 81, 56, 83, 7, 94, 73, 85, 7, 70, 37, 54, 31, 60, 74],12,[54, 31, 60, 74]).
f([89, 27, 86, 43, 41, 82, 18, 69, 7, 68, 31, 78, 45, 49, 55, 5, 34, 96, 32, 35, 62, 58, 40, 62, 51, 86, 51, 22, 39, 86, 1, 27, 24, 50],30,[39, 86, 1, 27, 24, 50]).
f([83, 6, 39, 3, 76, 34, 6, 35, 16, 71, 30, 73, 77, 5, 13, 12, 41, 87, 66, 48, 14, 25, 53, 101, 4, 28, 73, 87, 21, 31, 46, 64, 58, 67, 41, 95, 94, 84, 59, 1, 15, 65, 71, 29, 21, 88, 93, 96],16,[66, 48, 14, 25, 53, 101, 4, 28, 73, 87, 21, 31, 46, 64, 58, 67, 41, 95, 94, 84, 59, 1, 15, 65, 71, 29, 21, 88, 93, 96]).
f([58, 39, 57, 51],0,[57, 51]).
f([67, 61, 52, 15, 52, 56, 37, 28, 16, 68, 73, 28, 57, 1, 83, 47, 39, 12, 52, 79, 13, 55, 39, 66, 6, 67, 76, 17],7,[1, 83, 47, 39, 12, 52, 79, 13, 55, 39, 66, 6, 67, 76, 17]).
f([71, 96, 31, 13, 43, 88, 33, 71, 39, 101, 67, 9, 77, 68, 34, 11, 81, 47, 34],11,[88, 33, 71, 39, 101, 67, 9, 77, 68, 34, 11, 81, 47, 34]).
f([51, 30, 58, 77, 91, 78, 23, 70, 36, 8, 70, 14, 38, 74, 73, 20],2,[36, 8, 70, 14, 38, 74, 73, 20]).
f([93, 68, 98, 72, 2, 16, 48, 64, 32, 25, 83, 34, 75, 37],14,[48, 64, 32, 25, 83, 34, 75, 37]).
:-end_in_neg.
